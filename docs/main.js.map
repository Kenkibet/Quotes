{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/votes/votes.component.ts","./src/app/models/quotes-class.ts","./src/app/components/details/details.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/quotes.service.ts","./src/app/app.module.ts","./src/app/components/add-quotes/add-quotes.component.ts","./src/app/components/add-quotes/add-quotes.component.html","./src/app/components/list-quotes/list-quotes.component.ts","./src/app/components/list-quotes/list-quotes.component.html","./src/app/pipes/time-pipe.ts","./src/app/components/navba/navba.component.ts","./src/app/components/navba/navba.component.html","./src/app/directives/vote.directive.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\nimport { QuotesService } from 'src/app/services/quotes.service'\n\n@Component({\n  selector: 'app-votes',\n  template: `\n    <div class=\"row justify-content-between\">\n      <div class=\"col-md-6\">\n        <span class=\"badge bg-dark\">upvotes: {{ quote.upvote }}</span>\n        <span class=\"mx-3 badge bg-danger\">\n          downvotes: {{ quote.downvote }}\n        </span>\n      </div>\n      <div class=\"col-md-6 text-right\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button\n              class=\"btn btn-dark btn-sm btn-block w-100\"\n              (click)=\"upvote()\"\n            >\n              Upvote\n            </button>\n          </div>\n          <div class=\"col\">\n            <button\n              class=\"btn btn-danger btn-sm btn-block w-100\"\n              (click)=\"downvote()\"\n            >\n              Downvote\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [],\n})\nexport class VotesComponent implements OnInit {\n  @Input() quote\n  @Input() quotes\n  @Output() thisEvent = new EventEmitter<string>()\n\n  upvote() {\n    this.quote.upvote += 1\n    this.thisEvent.emit('upvote')\n  }\n  downvote() {\n    this.quote.downvote += 1\n    this.thisEvent.emit('downvote')    \n  }\n\n  constructor(private qouteService: QuotesService) {}\n\n  ngOnInit(): void {}  \n}\n","export class Quote {\r\n    public maxUpvote:boolean = false;;\r\n\r\n    constructor(public id: number, public quote: string, public upvote: number, public downvote: number, public author: string, public submitter: string, public time?: Date){\r\n        this.upvote = 0;\r\n        this.downvote = 0;\r\n        this.time = new Date();\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core'\nimport { Quote } from 'src/app/models/quotes-class'\n\n@Component({\n  selector: 'app-details',\n  template: `\n    <div class=\"mb-3\">\n      <div class=\"row align-items-center\">\n        <div class=\"col ms-n2\">\n          <h4 class=\"mb-1\">{{ quote.submitter }} added</h4>\n          <p class=\"card-text small font-weight-bold\">\n            <span class=\"fa fa-clock-o\"></span>\n            <time>{{ quote.time | createdAt }} ago</time>\n          </p>\n        </div>\n      </div>\n    </div>\n    <p class=\"mb-3 font-weight-bold\">\n      {{ quote.quote }}\n    </p>\n    <span class=\"float-right small text-right\">\n      <em>By {{ quote.author }}</em>\n    </span>\n  `,\n  styles: [],\n})\nexport class DetailsComponent implements OnInit {\n  @Input() quote: Quote\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quotes';\n}\n","<app-navba></app-navba>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core'\nimport { Quote } from '../models/quotes-class'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuotesService {\n  constructor() {}\n\n  getAllQuotes() {\n    return QUOTES\n  }\n\n  addQuote(quote){\n    QUOTES.push(quote);\n  }\n\n  getHighestUpvote(quotes) {\n    quotes.forEach((item)=>{\n      item.maxUpvote = false;\n    })\n    let newquotes = quotes.map((item) => {\n      return item.upvote;\n    });\n    let highestVoteIndex = newquotes.indexOf(Math.max(...newquotes));\n    return quotes.forEach((item, index) => {\n      if (index === highestVoteIndex) {\n        item.maxUpvote = true;\n      }\n    })\n  }\n}\n\nconst QUOTES = [\n  new Quote(\n    1,\n    'Be yourself; everyone else is already taken.',\n    0,\n    0,\n    'Oscar Wilde',\n    'Ken Kibet',\n  ),\n  new Quote(\n    2,\n    \"I'm selfish, impatient and a little insecure. I make mistakes, I am out of control and at times hard to handle. But if you can't handle me at my worst, then you sure as hell don't deserve me at my best.\",\n    0,\n    0,\n    'Marilyn Monroe',\n    'Ken Kibet',\n  ),\n  new Quote(\n    3,\n    'Two things are infinite: the universe and human stupidity; and I\\'m not sure about the universe.',\n    0,\n    0,\n    'Albert Einstein',\n    'Ken Kibet',\n  ),\n  new Quote(\n    4,\n    'So many books, so little time.',\n    0,\n    0,\n    'Frank Zappa',\n    'Ken Kibet',\n  ),\n  new Quote(\n    5,\n    'Be who you are and say what you feel, because those who mind don\\'t matter, and those who matter don\\'t mind.',\n    0,\n    0,\n    'Bernard M. Baruch',\n    'Ken Kibet',\n  ),\n  new Quote(\n    6,\n    'A room without books is like a body without a soul.',\n    0,\n    0,\n    'Marcus Tullius Cicero',\n    'Ken Kibet',\n  ),\n  new Quote(\n    7,\n    'You know you\\'re in love when you can\\'t fall asleep because reality is finally better than your dreams.',\n    0,\n    0,\n    'Dr. Seuss',\n    'Ken Kibet',\n  ),\n  new Quote(\n    8,\n    \"You only live once, but if you do it right, once is enough.\",\n    0,\n    0,\n    'Mae West',\n    'Ken Kibet',\n  ),\n  new Quote(\n    8,\n    \"Be the change that you wish to see in the world.\",\n    0,\n    0,\n    'Mahatma Gandhi',\n    'Ken Kibet',\n  ),\n]\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbaComponent } from './components/navba/navba.component';\nimport { AddQuotesComponent } from './components/add-quotes/add-quotes.component';\nimport { ListQuotesComponent } from './components/list-quotes/list-quotes.component';\nimport { TimePipe } from './pipes/time-pipe';\nimport { DetailsComponent } from './components/details/details.component';\nimport { VotesComponent } from './components/votes/votes.component';\nimport { VoteDirective } from './directives/vote.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbaComponent,\n    AddQuotesComponent,\n    ListQuotesComponent,\n    TimePipe,\n    DetailsComponent,\n    VotesComponent,\n    VoteDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Quote } from 'src/app/models/quotes-class'\nimport { QuotesService } from 'src/app/services/quotes.service'\n\n@Component({\n  selector: 'app-add-quotes',\n  templateUrl: './add-quotes.component.html',\n  styles: [],\n})\nexport class AddQuotesComponent implements OnInit {\n  public placeholder = 'Your Name...'\n\n  public newQuote = new Quote(0, '', 0, 0, '', '', new Date())\n  @Output() addNewQuote = new EventEmitter<Quote>()\n\n  addQuoteToList() {\n    let tempQuote = Object.assign({}, this.newQuote)\n    this.addNewQuote.emit(tempQuote)\n    this.addQuote(tempQuote)\n  }\n\n  constructor(private quotesService: QuotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  addQuote(quote) {\n    this.quotesService.addQuote(quote)\n    this.router.navigate(['/'])\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"card shadow\">\n                <div class=\"card-body\">\n                    <p id=\"form-title\" class=\"display-4\">Add a Quote</p>\n                    <form (ngSubmit)=\"addQuoteToList()\" action=\"\" #form=\"ngForm\">\n                        <div class=\"form-group\">\n                            <label class=\"\" for=\"name\">Your Name</label><br>\n                            <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\"\n                                [(ngModel)]=\"newQuote.submitter\" required #name=\"ngModel\">\n                            <div [hidden]=\"name.valid || name.pristine\">\n                                This name is required.\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"quote\">Quote</label><br>\n                            <textarea class=\"form-control\" name=\"quote\" id=\"quote\" [(ngModel)]=\"newQuote.quote\"\n                                #quoteField=\"ngModel\" required></textarea>\n                            <div [hidden]=\"quoteField.valid || quoteField.pristine\">The quote is required.</div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label class=\"\" for=\"author\">Quote's Author</label><br>\n                            <input class=\"form-control w-100\" type=\"text\" id=\"author\" name=\"author\"\n                                [(ngModel)]=\"newQuote.author\">\n                        </div>\n\n\n                        <div class=\"row align-items-center\">\n                            <div class=\"col-md-8\">\n                                <button [disabled]=\"!form.valid\" class=\"btn btn-dark btn-block w-100\">Submit</button>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <button type=\"reset\" class=\"btn btn-danger btn-sm ml-3 w-100\">Reset form</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Quote } from 'src/app/models/quotes-class';\nimport { QuotesService } from 'src/app/services/quotes.service';\n\n@Component({\n  selector: 'app-list-quotes',\n  templateUrl: './list-quotes.component.html',\n  styles: [\n  ]\n})\n\nexport class ListQuotesComponent implements OnInit {\n\n  quotes:Quote[]\n\n  @Output() thisEvent = new EventEmitter<string>();\n\n  constructor(private qouteService: QuotesService) { }\n\n  ngOnInit(): void {\n    this.quotes = this.qouteService.getAllQuotes().reverse();\n  }\n\n  addQuote(){\n    this.qouteService.getAllQuotes();\n  } \n\n  findMaxUpvote(quotes){\n    this.qouteService.getHighestUpvote(quotes);\n  }\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-9\">\n            <div *ngFor=\"let quote of quotes; let i = index\">\n                <div class=\"card shadow\" [quote]=\"quote\" (click)=\"findMaxUpvote(quotes) \" appVote >\n                    <div class=\"card-body\">\n                       <app-details [quote]=\"quote\"></app-details>                       \n                    </div>\n                    <div class=\"card-footer\">\n                        <app-votes [quote]=\"quote\" [quotes]=\"quotes\"></app-votes>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'createdAt',\r\n  pure: false\r\n})\r\nexport class TimePipe implements PipeTransform {\r\n\r\n  transform(createdAt: Date) {\r\n    let currentTime = new Date().getTime();\r\n    let timePassed = currentTime - createdAt.getTime();\r\n    let time = Math.round(timePassed/60000)\r\n    if (time === 0){\r\n      return \" less than a minute\";\r\n    } if (time === 1) {\r\n      return time + \" minute\";\r\n    } else {\r\n      return time + \" minutes\";\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navba',\n  templateUrl: './navba.component.html',\n  styles: [\n  ]\n})\nexport class NavbaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n    <div class=\"container\">\n        <a class=\"navbar-brand display-4\" routerLink=\"/home\">Quotes App</a>\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\"\n            aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" routerLink=\"/home\">All Quotes</a>\n                </li>\n            </ul>\n            <div class=\"form-inline ml-auto my-lg-0\">\n                <a class=\"nav-link\" routerLink=\"/add\">Add Quotes</a>\n            </div>\n        </div>\n    </div>\n</nav>","import { Directive, ElementRef, HostListener, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appVote]'\n})\nexport class VoteDirective {\n  @Input(\"upvote\") upvote: boolean;\n  @Input(\"quote\") quote; \n\n  isActive:boolean = false;\n\n  @HostListener(\"window:click\") mouse(){\n    if (this.quote.maxUpvote === true){\n      this.isActive = true;\n      this.element.nativeElement.style.backgroundColor = \"#00d97e\";\n      this.element.nativeElement.style.color = \"#ffffff\";\n    } else {\n      this.quote.maxUpvote = false;\n      this.element.nativeElement.style.backgroundColor = \"#ffffff\";\n      this.element.nativeElement.style.color = \"#000\";\n      this.isActive = false;\n    }\n  }\n\n  constructor(private element: ElementRef) { }\n\n}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AddQuotesComponent } from './components/add-quotes/add-quotes.component'\nimport { ListQuotesComponent } from './components/list-quotes/list-quotes.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home',\n  },\n\n  {\n    path:'home', component: ListQuotesComponent\n  },\n  {\n    path:'add', component: AddQuotesComponent\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}